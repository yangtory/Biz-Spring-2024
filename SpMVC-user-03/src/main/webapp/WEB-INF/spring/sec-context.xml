<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/admin" access="hasRole('ADMIN')"/>
		<sec:intercept-url pattern="/**" access="permitAll()"/>
		
		<!-- login page 내가 제어 하겠음 
		login-page : 로그인 화면을 보여줄 URL, controller 지정
		login-processing-url : 로그인을 실행할 URL, 로그인 버튼을 클릭했을 때
			spring security  에게 login 실행을 대신 맡기는데
			POST 로 요청하는 u8rl 을 지정하는 것
		POST /user/login 은 만들지 않아도 된다.
		-->
		<sec:form-login
			login-page="/user/login"
			login-processing-url="/user/login"
			username-parameter="u_name"
			password-parameter="u_password"
			default-target-url="/"
		/>	
		<sec:logout logout-url="/user/logout"/>
	</sec:http>

	<!-- login 이 완료되면 실행됨 
		authProviderImpl 을 통해 로그인을 수행하겠음
	-->	
	<sec:authentication-manager>
		<sec:authentication-provider ref="authProviderImpl"/>
	</sec:authentication-manager>

</beans>
